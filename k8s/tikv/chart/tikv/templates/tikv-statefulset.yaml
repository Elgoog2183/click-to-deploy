---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-tikv
  labels: &tikvLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: tikv-server
spec:
  replicas: {{ .Values.tikv.replicas }}
  selector:
    matchLabels: *tikvLabels
  serviceName: {{ .Release.Name }}-tikv
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: *tikvLabels
    spec:
      containers:
      - name: {{ .Release.Name }}-tikv
        image: {{ .Values.tikv.image.repo }}:{{ .Values.tikv.image.tag }}
        imagePullPolicy: Always
        ports:
        - name: client
          containerPort: 20160
        - name: status
          containerPort: 20180
        command:
        - /tikv-server
        - --addr=0.0.0.0:20160
        - --advertise-addr=$(POD_NAME).{{ .Release.Name }}-tikv:20160
        - --data-dir=/data/db
        - --pd={{ .Release.Name }}-pd-0.{{ .Release.Name }}-pd:2379,{{ .Release.Name }}-pd-1.{{ .Release.Name }}-pd:2379,{{ .Release.Name }}-pd-2.{{ .Release.Name }}-pd:2379
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: {{ .Release.Name }}-data-pvc
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-data-pvc
      labels: *tikvLabels
    spec:
      resources:
        requests:
          storage: {{ .Values.tikv.persistence.size }}
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.tikv.persistence.storageClass }}

